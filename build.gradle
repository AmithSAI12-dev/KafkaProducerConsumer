import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
	id "com.github.davidmc24.gradle.plugin.avro" version "1.0.0"
	id 'org.springframework.boot' version '2.5.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://packages.confluent.io/maven/' }
}

dependencies {
	implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '5.3.0'
	implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '2.7.0'
	implementation group: 'org.apache.avro', name: 'avro', version: '1.10.1'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

test {
	useJUnitPlatform()
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
	source("src/main/resources/avro")
	outputDir = file("src/main/java/")
}

tasks.named("compileJava").configure {
	source(generateAvro)
}